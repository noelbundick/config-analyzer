[
  {
    "name": "accidental-public-storage",
    "description": "Finds Storage Accounts with a Private Endpoint configured but the public endpoint is still enabled",
    "type": "ResourceGraph",
    "evaluation": {
      "query": "Resources | where type=~ 'Microsoft.Storage/storageAccounts' and isnotempty(properties.privateEndpointConnections[0]) and properties.networkAcls.defaultAction=~ 'Allow'"
    },
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#accidental-public-storage"
  },
  {
    "name": "event-hubs-not-locked-down-1",
    "description": "Finds Event Hubs with a network rule set having zero IP and virtual network rules and the defaultAction is Deny.",
    "type": "ResourceGraph",
    "evaluation": {
      "query": "Resources | where type=~ 'Microsoft.EventHub/namespaces'",
      "request": [
        {
          "operation": "networkRuleSets/default",
          "httpMethod": "GET",
          "query": "properties.defaultAction == `Deny` && length(properties.ipRules) == `0` && length(properties.virtualNetworkRules) == `0`"
        }
      ]
    },
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#event-hubs-not-locked-down-1"
  },
  {
    "name": "event-hubs-not-locked-down-2",
    "description": "Finds Event Hubs with a network rule set having one or more IP and virtual network rules for the namespace but the defaultAction is not set to 'Deny'",
    "type": "ResourceGraph",
    "evaluation": {
      "query": "Resources | where type=~ 'Microsoft.EventHub/namespaces'",
      "request": [
        {
          "operation": "networkRuleSets/default",
          "httpMethod": "GET",
          "query": "properties.defaultAction == `Allow` && (length(properties.ipRules) > `0` || length(properties.virtualNetworkRules) > `0`)"
        }
      ]
    },
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#event-hubs-not-locked-down-2"
  },
  {
    "name": "function-app-vnet-integration-misconfiguration",
    "description": "Finds Function Apps integrated with a VNET but the app settings are not properly configured",
    "type": "ResourceGraph",
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#function-app-vnet-integration-misconfiguration",
    "evaluation": {
      "query": "Resources | where type =~ 'Microsoft.Web/sites' and kind =~ 'functionapp'",
      "request": [
        {
          "operation": "virtualNetworkConnections",
          "httpMethod": "GET",
          "query": "exists"
        },
        {
          "operation": "config/appsettings/list",
          "httpMethod": "POST",
          "query": "properties.WEBSITE_DNS_SERVER != '168.63.129.16' || properties.WEBSITE_VNET_ROUTE_ALL != '1'"
        }
      ]
    }
  },
  {
    "name": "accidental-public-storage",
    "description": "Finds Storage Accounts with a Private Endpoint configured but the public endpoint is still enabled",
    "type": "ARM",
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#accidental-public-storage",
    "evaluation": {
      "query": "type == `Microsoft.Storage/storageAccounts` && properties.networkAcls.defaultAction == `Allow`",
      "and": [
        {
          "query": "type == `Microsoft.Storage/storageAccounts/privateEndpointConnections` && starts_with(name, `{{parent.name}}/`)"
        }
      ]
    }
  },
  {
    "name": "event-hubs-not-locked-down-1",
    "description": "Finds Event Hubs with a network rule set having zero IP and virtual network rules and the defaultAction is Deny.",
    "type": "ARM",
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#event-hubs-not-locked-down-1",
    "evaluation": {
      "query": "type == `Microsoft.EventHub/namespaces/networkRuleSets` && properties.defaultAction == `Deny` && length(properties.ipRules) == `0` && length(properties.virtualNetworkRules) == `0`"
    }
  },
  {
    "name": "event-hubs-not-locked-down-2",
    "description": "Finds Event Hubs with a network rule set having one or more IP and virtual network rules for the namespace but the defaultAction is not set to 'Deny'",
    "type": "ARM",
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#event-hubs-not-locked-down-2",
    "evaluation": {
      "query": "type == `Microsoft.EventHub/namespaces/networkRuleSets` && properties.defaultAction == `Allow` && (length(properties.ipRules) > `0` || length(properties.virtualNetworkRules) > `0`)"
    }
  },
  {
    "name": "function-app-vnet-integration-misconfiguration",
    "description": "Finds Function Apps integrated with a VNET but the app settings are not properly configured",
    "type": "ARM",
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#function-app-vnet-integration-misconfiguration",
    "evaluation": {
      "query": "type == 'Microsoft.Web/sites' && kind == 'functionapp'",
      "request": [
        {
          "operation": "config/appsettings/list",
          "httpMethod": "POST",
          "query": "properties.WEBSITE_DNS_SERVER != '168.63.129.16' || properties.WEBSITE_VNET_ROUTE_ALL != '1'"
        }
      ],
      "and": [
        {
          "query": "type == 'Microsoft.Web/sites/virtualNetworkConnections' && starts_with(name, '{{parent.name}}/')"
        }
      ]
    }
  },
  {
    "name": "accidental-public-storage",
    "description": "Finds Storage Accounts with a Private Endpoint configured but the public endpoint is still enabled",
    "type": "Terraform",
    "recommendation": "https://github.com/noelbundick/config-analyzer/blob/main/docs/built-in-rules.md#accidental-public-storage",
    "evaluation": {
      "query": "planned_values.root_module.resources[?type == 'azurerm_storage_account' && values.network_rules[0].default_action != 'Deny']",
      "and": [
        {
          "query": "configuration.root_module.resources[?type == 'azurerm_private_endpoint' && expressions.private_service_connection[0].private_connection_resource_id.references[?contains(@, `{{parent.address}}`)]]"
        }
      ]
    }
  }
]